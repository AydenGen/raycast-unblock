name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - README.md
      - LICENSE
      - .github/workflows/release.yml
      - .github/workflows/docker.yml
      - .github/workflows/deploy.yml
      - packages/docs/**
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  write-all

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Lint
        run: nr lint

  typecheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Set node
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Typecheck
        run: nr typecheck

  build_test:
    needs: typecheck
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13]
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Set package platform
        run: |
          if [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            echo "PACKAGE_ARCH=arm" >> $GITHUB_ENV
          else
            echo "PACKAGE_ARCH=intel" >> $GITHUB_ENV
          fi
          echo "PACKAGE_ARCH is set to $PACKAGE_ARCH"
      - name: Install pnpm
        uses: pnpm/action-setup@v3

      - name: Set node latest
        uses: actions/setup-node@v4
        with:
          node-version: latest

      - name: Setup
        run: npm i -g @antfu/ni

      - name: Install
        run: nci

      - name: Build
        run: |
          nr build:core
          # mv packages/core/dist/index.js dist/index.js
          sh scripts/single-application.sh
          file dist/raycast-unblock-app

      - name: Build Raycast Extension (macOS Only)
        if: matrix.os == 'macos-latest'
        run: |
          nr build:ray
          mv packages/raycast/dist dist/raycast-unblock
          cd dist
          zip -r raycast-unblock-extension.zip raycast-unblock

      - name: Upload Artifact for JS
        uses: actions/upload-artifact@v4
        with:
          name: raycast-unblock-${{ matrix.os }}-js
          path: dist/index.js

      - name: Upload Artifact for App
        uses: actions/upload-artifact@v4
        with:
          name: raycast-unblock-${{ matrix.os }}-${{ env.PACKAGE_ARCH }}-app
          path: dist/raycast-unblock-app
      - name: Upload Artifact for Raycast Extension
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: raycast-unblock-${{ matrix.os }}-${{ matrix.node }}-ray
          path: dist/raycast-unblock-extension.zip

      - name: Upload a Build Artifact to CI Release
        if: github.ref == 'refs/heads/main' && matrix.os == 'macos-latest'
        uses: WebFreak001/deploy-nightly@v3.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: https://uploads.github.com/repos/wibus-wee/raycast-unblock/releases/154304368/assets{?name,label}
          release_id: 154304368
          asset_path: ./dist/raycast-unblock-extension.zip
          asset_name: raycast-unblock-extension.zip
          asset_content_type: application/zip
          max_releases: 7
  run_test:
    needs: build_test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, macos-13]

    steps:
      - uses: actions/checkout@v4
      - name: Set package platform
        run: |
          if [[ ${{ matrix.os }} == 'macos-latest' ]]; then
            echo "PACKAGE_ARCH=arm" >> $GITHUB_ENV
          else
            echo "PACKAGE_ARCH=intel" >> $GITHUB_ENV
          fi
          echo "PACKAGE_ARCH is set to $PACKAGE_ARCH"
      - name: Download Artifact for App
        uses: actions/download-artifact@v4
        with:
          name: raycast-unblock-${{ matrix.os }}-${{ env.PACKAGE_ARCH }}-app

      - name: Run test
        run: |
          chmod +x raycast-unblock-app
          sh scripts/workflows/test-app.sh
